stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKERHUB_USERNAME: $DOCKER_HUB_USERNAME
  DOCKERHUB_PASSWORD: $DOCKER_HUB_ACCESS_TOKEN 
  DOCKERHUB_REPO: $CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME
  DOCKER_COMPOSE_CONTAINER_NAME: $CI_PROJECT_NAME
  SSH_PRIVATE_KEY: $SSH_KEY_DEPLOY
services:
  - docker:dind

build:
  stage: build
  script:
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
    - docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest .
    - docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest
  only:
    - dev


deploy:
  stage: deploy
  script:
    - mkdir -p ~/.docker
    - echo '{"auths":{"https://index.docker.io/v1/":{"auth":"'"$(echo -n "$DOCKERHUB_USERNAME:$DOCKERHUB_PASSWORD" | base64)"'"}}}' > ~/.docker/config.json
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
    - scp ~/.docker/config.json root@$SERVER_IP:/root/.docker/config.json
    - |
      ssh -o LogLevel=QUIET -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no root@$SERVER_IP << 'EOF'
      set -e  # Завершение скрипта при любой ошибке
      if ! command -v docker &> /dev/null
      then
          echo "Docker could not be found"
          exit 1
      fi
      echo "Buiding Docker image - $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest"
      docker pull $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:latest
      docker-compose -f /root/docker-compose.yml up --no-deps -d "$DOCKER_COMPOSE_CONTAINER_NAME"
      docker system prune -f
      docker logout
      EOF
  only:
    - production
